{"version":3,"sources":["utils/validators/validators.js","components/Common/FormsControls/FormsControls.jsx","components/Common/FormsControls/FormsControls.module.css","components/Dialogs/Dialogs.module.css","components/hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Common/Button/Button.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","touched","error","props","hasError","className","styles","form_control","Input","module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","dialog","id","name","Message","message","Button","onClick","children","maxLength10","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","dialogs_messages","Field","component","validate","placeholder","type","buttonStyle","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","dialogs_items","values","AddMessage","newMessageBody","compose"],"mappings":"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","file":"static/js/5.cd6c74b4.chunk.js","sourcesContent":["export const required = value => {\n    if(value) return undefined;\n    return \"Поле должно быть заполнено\";\n}\n\nexport const maxLengthCreator = maxLength => value => {\n    if(value.length > maxLength) return `Вы ввели максимально допустимое количество символов (${maxLength})`;\n    return undefined;\n}","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\n\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.form_control + \" \" + (hasError && styles.error)} >\n        <div><textarea {...input} {...props} /></div>    \n    {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.form_control + \" \" + (hasError && styles.error)} >\n        <div><input {...input} {...props} /></div>    \n    {hasError && <span>{error}</span>}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__11y0-\",\"error\":\"FormsControls_error__35B8G\",\"formSummaryError\":\"FormsControls_formSummaryError__3e7lO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\"};","import React from 'react';\nimport { Redirect } from \"react-router\";\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n    return {\n      isAuth: state.auth.isAuth\n    };\n  }\n\nexport const withAuthRedirect = (Component) => {\n    \n    \n    class RedirectComponent extends React.Component {\n        render(){\n            if(!this.props.isAuth){\n                return <Redirect to={\"/login\"} />\n              }\n              return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\nfunction Message(props) {\r\n  return <div className={styles.message}>{props.message}</div>;\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\nimport \"./Button.css\";\n\nexport const Button = ({ onClick, children }) => {\n  return (\n    <div className=\"container row-xGrid-yMiddle\">\n      <div className=\"row-xGrid iso-standard\">\n        <button onClick={onClick} className=\"ctrl-standard typ-subhed fx-sliderIn\">{children}</button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./AddMessageForm.module.css\";\nimport { Button } from \"./../../Common/Button/Button.jsx\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { required, maxLengthCreator } from \"./../../../utils/validators/validators.js\"\nimport { Textarea } from \"./../../Common/FormsControls/FormsControls.jsx\"\n\nconst maxLength10 = maxLengthCreator(20);\n\nconst AddMessageForm = props => {\n  return (\n      <form onSubmit={props.handleSubmit} className={styles.dialogs_messages}>\n          <Field component={Textarea} validate={[required, maxLength10]} name=\"newMessageBody\" placeholder=\"Введите новое сообщение...\" />\n          <Button\n            type=\"button\"\n            buttonStyle=\"btn--primary--outline\"\n          >\n            Отправить\n          </Button>\n      </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\n\nexport default AddMessageFormRedux;\n\n","import React from \"react\";\nimport styles from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem.jsx\";\nimport Message from \"./Message/Message.jsx\";\nimport { Redirect } from \"react-router-dom\";\nimport AddMessageFormRedux from \"./AddMessageForm/AddMessageForm\";\n\nfunction Dialogs(props) {\n  let dialogsElements = props.dialogsPage.dialogs.map(d => (\n    <DialogItem id={d.id} name={d.name} key={d.id} />\n  ));\n\n  let messagesElements = props.dialogsPage.messages.map(m => (\n    <Message id={m.id} message={m.message} key={m.id} />\n  ));\n\n  function AddMessage(values){\n    props.AddMessage(values.newMessageBody);\n  }\n\n  if(!props.isAuth){\n    return <Redirect to={\"/login\"} />\n  };\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogs_items}>{dialogsElements}</div>\n      <div>{messagesElements}</div>\n      <AddMessageFormRedux onSubmit={AddMessage} />\n    </div>\n  );\n}\n\nexport default Dialogs;\n","import Dialogs from \"./Dialogs.jsx\";\r\nimport {\r\n  AddMessage\r\n} from \"./../../redux/dialogsReducer.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"./../hoc/withAuthRedirect.js\";\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {AddMessage}),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}